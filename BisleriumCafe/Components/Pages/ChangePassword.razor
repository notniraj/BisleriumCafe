@page "/changepassword"
@inject ISnackbar SnackBar
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<!-- MudPaper component for the overall layout -->
<MudPaper>
    <!-- MudStack for styling, contains MudText for the header -->
    <MudStack Row="true" Spacing="2">
        <MudText Color="Color.Dark"> Change Your Password </MudText>
    </MudStack>

    <!-- MudForm for user input -->
    <MudForm @ref="form">
        <!-- Current Password input field -->
        <MudTextField T="string" Label="Current Password" @bind-Value="@CurrentPassword" InputType="InputType.Password" Required="true" />
        <!-- New Password input field -->
        <MudTextField T="string" Label="New Password" @bind-Value="@NewPassword" Required="true" InputType="InputType.Password"/>
        
        <!-- MudStack for buttons, positioned at the bottom right -->
        <MudStack Row="true" Class="mt-6 justify-end">
            <!-- Reset button to clear form input -->
            <MudButton Variant="Variant.Filled" Color="Color.Default" DisableElevation="true" @onclick="@(()=>form.ResetAsync())">Reset</MudButton>
            <!-- Change button to initiate password change -->
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" @onclick="ChangePasswordHandler">Change</MudButton>
        </MudStack>
    </MudForm>
</MudPaper>

@code{
    [CascadingParameter]
    private GlobalState _globalState { get; set; }

    private string CurrentPassword { get; set; }
    private string NewPassword { get; set; }
    MudForm form;

    // Handler for changing the password
    private void ChangePasswordHandler()
    {
        try
        {
            // Validate the form
            form.Validate();
            
            // If the form is valid, attempt to change the password
            if (form.IsValid)
            {
                UsersService.ChangePassword(_globalState.CurrentUser.Id, CurrentPassword, NewPassword);
                SnackBar.Add("The password has been changed successfully.", Severity.Success);
                
                // Reset the form after successful password change
                form.ResetAsync();
            }
        }
        catch (Exception e)
        {
            // Display an error message in case of an exception
            SnackBar.Add(e.Message, Severity.Error);
        }
    }
}
